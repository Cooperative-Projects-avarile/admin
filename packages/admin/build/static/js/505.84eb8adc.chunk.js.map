{"version":3,"file":"static/js/505.84eb8adc.chunk.js","mappings":"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","sources":["pages/homePage/helloPage/components/columnChart/platformColumnChart.tsx","webpack://web/./src/pages/homePage/helloPage/helloPage.module.scss?c981","pages/homePage/helloPage/components/card/cardTemplate.tsx","pages/homePage/helloPage/components/card/cardContainer.tsx","pages/homePage/helloPage/helloPage.tsx"],"sourcesContent":["import { useFlatInject } from \"@/common/hooks\";\nimport { Column, Line } from \"@ant-design/plots\";\nimport { Card } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { sortBy } from \"lodash\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nconst PlatformColumnChart = () => {\n\tconst { platformStatisticsData } = useFlatInject(\"helloPageStore\")[0];\n\n\tconst chartData = useMemo(() => {\n\t\treturn platformStatisticsData.length > 0\n\t\t\t? generateColumnChartData(platformStatisticsData)\n\t\t\t: [];\n\t}, [platformStatisticsData]);\n\n\tconst config = {\n\t\tdata: chartData,\n\t\txField: \"date\",\n\t\tyField: \"number\",\n\t\tseriesField: \"type\",\n\t\tisGroup: true,\n\t\txAxis: {\n\t\t\tlabel: {\n\t\t\t\tautoRotate: false,\n\t\t\t},\n\t\t},\n\t\tslider: {\n\t\t\tstart: 0.1,\n\t\t\tend: 0.2,\n\t\t},\n\t};\n\n\treturn (\n\t\t<Card hoverable title={\"Platform statistics overtime\"}>\n\t\t\t<Line {...config} />\n\t\t</Card>\n\t);\n};\n\nexport default PlatformColumnChart;\n\nconst generateColumnChartData = (data) => {\n\tlet user = [],\n\t\tpartner = [],\n\t\tenquiry = [],\n\t\topportunity = [],\n\t\tvisit = [];\n\n\tfor (let item of data) {\n\t\tuser.push({\n\t\t\tdate: dayjs(item.created_at).format(\"YYYY-MM-DD\"),\n\t\t\tnumber: item.user_count,\n\t\t\ttype: \"user\",\n\t\t});\n\n\t\tpartner.push({\n\t\t\tdate: dayjs(item.created_at).format(\"YYYY-MM-DD\"),\n\t\t\tnumber: item.partner_count,\n\t\t\ttype: \"partner\",\n\t\t});\n\n\t\tenquiry.push({\n\t\t\tdate: dayjs(item.created_at).format(\"YYYY-MM-DD\"),\n\t\t\tnumber: item.enquiry_count,\n\t\t\ttype: \"enquiry\",\n\t\t});\n\n\t\topportunity.push({\n\t\t\tdate: dayjs(item.created_at).format(\"YYYY-MM-DD\"),\n\t\t\tnumber: item.opportunity_count,\n\t\t\ttype: \"opportunity\",\n\t\t});\n\n\t\tvisit.push({\n\t\t\tdate: dayjs(item.created_at).format(\"YYYY-MM-DD\"),\n\t\t\tnumber: item.visit_count,\n\t\t\ttype: \"visit\",\n\t\t});\n\t}\n\n\treturn sortBy(\n\t\t[...user, ...partner, ...enquiry, ...opportunity, ...visit],\n\t\t[\"date\", \"type\"],\n\t);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"helloPage_content__pDDnw\",\"title\":\"helloPage_title__cKqZc\",\"info\":\"helloPage_info__uPIGC\",\"infoBoard\":\"helloPage_infoBoard__m3QRQ\"};","import { Card } from 'antd'\nimport { Area } from '@ant-design/plots'\nimport { useEffect, useState } from 'react'\nimport dayjs from 'dayjs'\nconst { Meta } = Card\n\n\nexport interface ICardTemplateProps {\n  data: any\n  title: string\n  description?: string\n}\n\nexport const CardTemplate = (info: ICardTemplateProps) => {\n  const { data, title, description } = info\n\n  let chartData = []\n\n  if (data.length > 0) { \n\n    switch (title) {\n      case \"Visits\":\n        for (let item of data) { \n          chartData.push({\n              date:  dayjs(item.created_at).format('YYYY-MM-DD'),\n            number: item.visits\n          })\n        }\n        break;\n        \n        case \"Users\":\n          for (let item of data) { \n            chartData.push({\n              date:  dayjs(item.created_at).format('YYYY-MM-DD'),\n              number: item.user_count\n            })\n          }\n          break;\n          \n          \n          case \"Partners\":\n            for (let item of data) { \n              chartData.push({\n          date:  dayjs(item.created_at).format('YYYY-MM-DD'),\n          number: item.partner_count\n        })\n      }\n      break;\n      \n      case \"Opportunities\":\n        for (let item of data) { \n          chartData.push({\n            date:  dayjs(item.created_at).format('YYYY-MM-DD'),\n            number: item.opportunity_count\n          })\n        }\n        break;\n        \n      case \"Enquiries\":\n        for (let item of data) { \n          chartData.push({\n            date:  dayjs(item.created_at).format('YYYY-MM-DD'),\n            number: item.enquiry_count\n          })\n        }\n        break;\n      \n        default:\n          break;\n        }\n      }\n        \n        return (\n          <Card\n          hoverable\n          loading={data.length === 0}\n          style={{ flexGrow:1 }}\n      >\n      <Meta title={title} description={description} />\n      {/* {info.title}: { data.length === 0 ? 'loading' : data[0].value } */}\n      {chartData.length > 0  ?  <CardAreaChart data={chartData} /> : \"loading\" }  \n    </Card>\n  )\n\n}\n\nconst CardAreaChart = ({ data }) => { \n\n  const config = {\n    data,\n    xField: 'date',\n    yField: 'number',\n    height: 400,\n  }\n\n  return <Area {...config}/>\n}\n\n\n\n","import { CardTemplate } from \"./cardTemplate\";\nimport { useFlatInject } from \"@/common/hooks\";\nimport { Col, Row, Space } from \"antd\";\nimport { useMemo } from \"react\";\n\nexport const CardContainer = () => { \n  const { platformStatisticsData } = useFlatInject(\"helloPageStore\")[0];\n  \n  const data = useMemo(() => {\n    return platformStatisticsData.length > 0 ? platformStatisticsData : [];\n   }, [platformStatisticsData]);\n  \n  return (\n    <Row justify=\"space-between\" gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n      <Col span={12}>\n        <CardTemplate data={data} title=\"Users\" description=\"description\" />\n      </Col>\n      <Col span={12}>\n        <CardTemplate data={data} title=\"Partners\" description=\"description\" />\n      </Col>\n      <Col span={8}>\n        <CardTemplate data={data} title=\"Enquiries\" description=\"description\" />\n      </Col>\n        <Col span={8}>\n          <CardTemplate data={data} title=\"Visits\" description=\"description\" />\n        </Col>\n        <Col span={8}>\n          <CardTemplate data={data} title=\"Opportunities\" description=\"description\" />\n        </Col>\n    </Row>\n    )\n  \n}","import { useFlatInject } from \"@/common/hooks\";\nimport { useEffect, useState } from \"react\";\nimport ColumnChart from \"./components/columnChart/opportunityColumnChart\";\nimport PlatformColumnChart from \"./components/columnChart/platformColumnChart\";\nimport styles from \"./helloPage.module.scss\";\nimport { Col, Row, Select, Space } from \"antd\";\nimport { CardContainer } from \"./components/card/cardContainer\";\n\nconst HelloPage = () => {\n\tconst { queryOpportunityACT, queryPlatformACT } =\n\t\tuseFlatInject(\"helloPageStore\")[0];\n\n\tconst [timeRange, SetTimeRange] = useState(\"all\");\n\n\tuseEffect(() => {\n\t\tqueryOpportunityACT({\n\t\t\topportunity_ids: [],\n\t\t\torder: {},\n\t\t});\n\t\tqueryPlatformACT({\n\t\t\tcreated_at: [timeRange, new Date().toISOString()],\n\t\t\torder: {},\n\t\t});\n\t}, [timeRange]);\n\n\nconst TimeRangeSelector = () => { \n\n\tconst filterOption = (input: string, option: { label: string; value: string }) =>\n  (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\n\n\treturn (\n\t\t<div>\n\t\t\t<Select\n\t\t\t\tshowSearch\n\t\t\t\tplaceholder=\"Select a time range\"\n\t\t\t\toptionFilterProp=\"children\"\n\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase '7':\n\t\t\t\t\t\t// get the date 7 days ago\n\t\t\t\t\t\t\tconst date7 = new Date();\n\t\t\t\t\t\t\tdate7.setDate(date7.getDate() - 7);\n\t\t\t\t\t\t\tconsole.log(date7);\n\t\t\t\t\t\t\tSetTimeRange(date7.toString())\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '30':\n\t\t\t\t\t\t\t// get the date 30 days ago\n\t\t\t\t\t\t\tconst date30 = new Date();\n\t\t\t\t\t\t\tdate30.setDate(date30.getDate() - 30);\n\t\t\t\t\t\t\tconsole.log(date30);\n\t\t\t\t\t\t\tSetTimeRange(date30.toString())\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '90':\n\t\t\t\t\t\t\t// get the date 90 days ago\n\t\t\t\t\t\t\tconst date90 = new Date();\n\t\t\t\t\t\t\tdate90.setDate(date90.getDate() - 90);\n\t\t\t\t\t\t\tconsole.log(date90);\n\t\t\t\t\t\t\tSetTimeRange(date90.toString())\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'all':\n\t\t\t\t\t\t\tSetTimeRange('2023-08-28 02:37:00.021')\t\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t }}\n\t\t\t\tfilterOption={filterOption}\n\t\t\t\tdefaultValue={'all'}\n\t\t\t\toptions={[\n\t\t\t\t\t  {\n        value: '7',\n        label: 'Last 7 days',\n      },\n      {\n        value: '30',\n        label: 'Last Month',\n      },\n      {\n        value: '90',\n        label: 'Last 3 Months',\n      },\n      {\n        value: 'all',\n        label: 'All Time',\n      },\n\t\t\t\t]}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\n\treturn (\n\t\t<div className={styles.content}>\n\t\t\t<Space\n\t\t\t\tdirection=\"vertical\"\n\t\t\t\tsize={\"middle\"}\n\t\t\t\tstyle={{ display: \"flex\" }}\n\t\t\t>\n\t\t\t<Row justify={'end'}>\n\t\t\t\t<Col span={8}></Col>\t\n\t\t\t\t<Col span={8}></Col>\t\n\t\t\t\t<Col span={8}><TimeRangeSelector /></Col>\t\n\t\t\t</Row>\n\t\t\t\t<CardContainer />\n\t\t\t\t<PlatformColumnChart />\n\t\t\t</Space>\n\t\t</div>\n\t);\n};\n\nexport default HelloPage;\n"],"names":["PlatformColumnChart","platformStatisticsData","useFlatInject","config","data","useMemo","length","generateColumnChartData","xField","yField","seriesField","isGroup","xAxis","label","autoRotate","slider","start","end","_jsx","Card","hoverable","title","children","Line","user","partner","enquiry","opportunity","visit","item","push","date","dayjs","created_at","format","number","user_count","type","partner_count","enquiry_count","opportunity_count","visit_count","sortBy","Meta","CardTemplate","info","description","chartData","visits","_jsxs","loading","style","flexGrow","CardAreaChart","_ref","height","Area","CardContainer","Row","justify","gutter","xs","sm","md","lg","Col","span","HelloPage","queryOpportunityACT","queryPlatformACT","timeRange","SetTimeRange","useState","useEffect","opportunity_ids","order","Date","toISOString","TimeRangeSelector","Select","showSearch","placeholder","optionFilterProp","onChange","value","date7","setDate","getDate","console","log","toString","date30","date90","filterOption","input","option","_option$label","toLowerCase","includes","defaultValue","options","className","styles","Space","direction","size","display"],"sourceRoot":""}