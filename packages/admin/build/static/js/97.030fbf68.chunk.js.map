{"version":3,"file":"static/js/97.030fbf68.chunk.js","mappings":"oQAyCA,MAtCmBA,IAKjB,MAAM,SAAEC,EAAQ,aAAEC,EAAY,aAAEC,GAAiBH,GAC1CI,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GAgB/C,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACEQ,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,KAAK,UAAUC,QAhBTC,KAChBR,GAAe,EAAK,EAewBJ,SAAC,8BAG3CQ,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CACJC,MAAM,2BACNC,KAAMZ,EACNa,KAlBWC,KACfb,GAAe,GACfH,GAAc,EAiBViB,SAdoBC,KACxBf,GAAe,GACH,OAAZF,QAAY,IAAZA,GAAAA,GAAgB,EAYgBF,SAC3BA,MAEF,ECtBP,MAAMoB,EAAO,CACX,CACEC,IAAK,IACLC,GAAI,IACJC,KAAM,SAER,CACEF,IAAK,IACLC,GAAI,IACJC,KAAM,QAiGV,MA7FiBC,KACf,MAAOC,GAAaC,EAAAA,EAAAA,WACbC,IAAmBC,EAAAA,EAAAA,IAAc,oBACjCC,IAAiBD,EAAAA,EAAAA,IAAc,kBAChC,qBAAEE,EAAoB,mBAAEC,GAAuBJ,GAC/C,YAAEK,EAAW,kBAAEC,GAAsBJ,GACrC,QAAEK,EAASC,IAAKC,IAAuBC,EAAAA,EAAAA,IAC3CJ,EACA,CACEK,MAAM,EACNC,QAAQ,KAGLC,EAASC,IAAcpC,EAAAA,EAAAA,YACxBqC,GAAWC,EAAAA,EAAAA,MACX1C,EAAeA,KACnBY,EAAAA,EAAAA,QAAc,CACZC,MAAO,2BACP8B,QAAS,iFACT5B,KAAMA,KACA6B,MAAMC,QAAQN,KACZA,EAAQO,SAAS,aACnBX,EAAmBI,GAASQ,MAAK,MAC/BC,EAAAA,EAAAA,MACAC,EAAAA,GAAAA,OACAR,EAAS,IAAI,IAGfS,EAAAA,EAAAA,KAAkB,CAChBC,QAAS,mDAGf,GAEF,GAEJC,EAAAA,EAAAA,YAAU,KACRvB,EAAqBwB,EAAAA,GAAoB,GACxC,IAEH,MAAMC,EAAiC,CACrC,CACEzC,MAAO,2BACP0C,UAAW,KACXnC,IAAK,KACLoC,OAASC,IAASlD,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAT,SAAE0D,KAE7B,CACE5C,MAAO,OACP0C,UAAW,OACXnC,IAAK,OACLoC,OAASC,IAASlD,EAAAA,EAAAA,KAAA,KAAAR,SAAI0D,KAExB,CACE5C,MAAO,SACPO,IAAK,SACLoC,OAAQA,CAACE,EAAGC,KACVpD,EAAAA,EAAAA,KAACqD,EAAS,CAAC3D,aAAcA,KACvBuB,EAAUqC,aAAa,EACtB7D,aAAcA,EAAaD,UAC5BQ,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CACHqC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,OAAO,aACPC,eAAgBA,OAChBC,KAAM,SACNC,KAAM5C,EAAUzB,UAEhBQ,EAAAA,EAAAA,KAACkB,EAAAA,EAAAA,KAAS,CAAC4C,MAAM,eAAK/C,KAAK,aAAYvB,SACpCgC,EAAYuC,QAAUxC,EAAmBwC,SACxC/D,EAAAA,EAAAA,KAACgE,EAAAA,EAAI,CACHC,eAAe,EACfC,mBAAoB1C,EACpB2C,WAAS,EACTC,SAAU7C,EACV8C,QAAUzD,IACRqB,EAAWrB,EAAKoB,QAAQ,YAU1C,OACEhC,EAAAA,EAAAA,KAAA,OAAAR,UACEQ,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CAAC5C,QAASA,EAASqB,QAASA,EAASwB,WAAY3D,KACnD,C","sources":["pages/homePage/sysPage/rolePage/components/modalForm/modalForm.tsx","pages/homePage/sysPage/rolePage/rolePage.tsx"],"sourcesContent":["import { Button, Modal } from \"antd\";\nimport { useState } from \"react\";\n\nconst ModalForm = (props: {\n  children: React.ReactNode;\n  handleSubmit: () => void;\n  handleCancel?: () => void;\n}) => {\n  const { children, handleSubmit, handleCancel } = props;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n    handleSubmit();\n  };\n\n  const handleCancelLocal = () => {\n    setIsModalOpen(false);\n    handleCancel?.();\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        修改权限\n      </Button>\n      <Modal\n        title=\"修改权限\"\n        open={isModalOpen}\n        onOk={handleOk}\n        onCancel={handleCancelLocal}>\n        {children}\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalForm;\n","import { initAllStores, useFlatInject, useGreatAsync } from \"@/common/hooks\";\nimport { ROUTE_STRUCT_CONFIG } from \"@/config/routerConfig\";\nimport { routerHelper } from \"@/services\";\nimport { Button, Form, Modal, Table, Tree, notification } from \"antd\";\nimport type { ColumnsType } from \"antd/es/table\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ModalForm from \"./components/modalForm/modalForm\";\n\ninterface DataType {\n  key: string;\n  name: string;\n  id: string;\n}\n\nconst data = [\n  {\n    key: \"1\",\n    id: \"1\",\n    name: \"admin\",\n  },\n  {\n    key: \"2\",\n    id: \"2\",\n    name: \"usr\",\n  },\n];\n\nconst RolePage = () => {\n  const [modalForm] = Form.useForm();\n  const [permissionStore] = useFlatInject(\"permissionStore\");\n  const [userInfoStore] = useFlatInject(\"userInfoStore\");\n  const { createPermissionTree, permissionTreeData } = permissionStore;\n  const { permissions, updatePermissions } = userInfoStore;\n  const { loading, run: updatePermissionsG } = useGreatAsync(\n    updatePermissions,\n    {\n      auto: false,\n      single: true,\n    }\n  );\n  const [checked, setChecked] = useState<any>();\n  const navigate = useNavigate();\n  const handleSubmit = () => {\n    Modal.confirm({\n      title: \"确定么？\",\n      content: \"更新权限之后，需要重新登陆\",\n      onOk: () => {\n        if (Array.isArray(checked)) {\n          if (checked.includes(\"helloPage\")) {\n            updatePermissionsG(checked).then(() => {\n              initAllStores();\n              routerHelper.init();\n              navigate(\"/\");\n            });\n          } else {\n            notification.info({\n              message: \"helloPage 首页得有啊！\",\n            });\n          }\n        }\n      },\n    });\n  };\n  useEffect(() => {\n    createPermissionTree(ROUTE_STRUCT_CONFIG);\n  }, []);\n\n  const columns: ColumnsType<DataType> = [\n    {\n      title: \"角色编号\",\n      dataIndex: \"id\",\n      key: \"id\",\n      render: (text) => <Button>{text}</Button>,\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (_, record) => (\n        <ModalForm handleCancel={()=>{\n          modalForm.resetFields()\n        }} handleSubmit={handleSubmit}>\n          <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 14 }}\n            layout=\"horizontal\"\n            onValuesChange={() => {}}\n            size={\"middle\"}\n            form={modalForm}\n          >\n            <Form.Item label=\"权限\" name=\"permission\">\n              {permissions.length && permissionTreeData.length && (\n                <Tree\n                  checkStrictly={true}\n                  defaultCheckedKeys={permissions}\n                  checkable\n                  treeData={permissionTreeData}\n                  onCheck={(data: any) => {\n                    setChecked(data.checked);\n                  }}\n                />\n              )}\n            </Form.Item>\n          </Form>\n        </ModalForm>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <Table loading={loading} columns={columns} dataSource={data} />\n    </div>\n  );\n};\n\nexport default RolePage;\n"],"names":["props","children","handleSubmit","handleCancel","isModalOpen","setIsModalOpen","useState","_jsxs","_Fragment","_jsx","Button","type","onClick","showModal","Modal","title","open","onOk","handleOk","onCancel","handleCancelLocal","data","key","id","name","RolePage","modalForm","Form","permissionStore","useFlatInject","userInfoStore","createPermissionTree","permissionTreeData","permissions","updatePermissions","loading","run","updatePermissionsG","useGreatAsync","auto","single","checked","setChecked","navigate","useNavigate","content","Array","isArray","includes","then","initAllStores","routerHelper","notification","message","useEffect","ROUTE_STRUCT_CONFIG","columns","dataIndex","render","text","_","record","ModalForm","resetFields","labelCol","span","wrapperCol","layout","onValuesChange","size","form","label","length","Tree","checkStrictly","defaultCheckedKeys","checkable","treeData","onCheck","Table","dataSource"],"sourceRoot":""}